{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","isSelected","product","includes","addProduct","setState","pre","push","deleteProduct","filter","item","onClickFunc","renderSelectList","length","className","map","i","arr","this","type","disabled","onClick","React","Component","console","log","ReactDOM","render","document","getElementById"],"mappings":"8OAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAe,CACbC,aAAc,CAAC,Q,EAGjBC,WAAa,SAACC,GACZ,OAAO,EAAKH,MAAMC,aAAaG,SAASD,I,EAG1CE,WAAa,SAACF,GACZ,EAAKG,UAAS,SAACC,GAGb,OAFAA,EAAIN,aAAaO,KAAKL,GAEf,CACLF,aAAcM,EAAIN,kB,EAKxBQ,cAAgB,SAACN,GACf,EAAKG,UAAS,SAACC,GACb,MAAO,CACLN,aAAcM,EAAIN,aAAaS,QAC7B,SAACC,GAAD,OAAkBA,IAASR,U,EAMnCS,YAAc,SAACT,GACT,EAAKD,WAAWC,GAClB,EAAKM,cAAcN,GAEnB,EAAKE,WAAWF,I,EAIpBU,iBAAmB,WAkBjB,OAjBiB,EAAKb,MAAMC,aAAaa,OAErC,qCACE,qBAAKC,UAAU,yBAAf,4BACA,qBAAKA,UAAU,wBAAf,SACsC,IAAnC,EAAKf,MAAMC,aAAaa,OAAxB,UACM,EAAKd,MAAMC,aAAa,GAD9B,gBAEG,EAAKD,MAAMC,aAAae,KAAI,SAACL,EAAMM,EAAGC,GACtC,OAAOA,EAAID,KAAOC,EAAIA,EAAIJ,OAAS,GAA5B,eACKH,EADL,4BAECA,WAKhB,qB,4CAKN,WAAU,IAAD,OACP,OACE,sBAAKI,UAAU,WAAf,UACE,oBAAIA,UAAU,uBAAd,SACII,KAAKN,qBAET,wBACEE,UAAU,eACVK,KAAK,SACLC,SAA6C,IAAnCF,KAAKnB,MAAMC,aAAaa,OAClCQ,QAAS,kBAAM,EAAKhB,SAAS,CAAEL,aAAc,MAJ/C,SAMGkB,KAAKnB,MAAMC,aAAaa,OAAS,aAAe,MAEnD,oBAAIC,UAAU,iBAAd,SAEIjB,EAAgBkB,KAAI,SAAAb,GAAO,OACzB,qBAAkBY,UAAU,oBAA5B,UACE,wBACEA,UAAU,gBACVK,KAAK,SACLE,QAAS,kBAAM,EAAKV,YAAYT,IAHlC,SAKG,EAAKD,WAAWC,GAAW,SAAW,WAGzC,sBAAMY,UAAW,EAAKb,WAAWC,GAAW,2BAA6B,UAAzE,SACGA,MAVIA,e,GA3ELoB,IAAMC,WAiGxBC,QAAQC,IAAI5B,GAEGC,QCrHf4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.aa079f54.chunk.js","sourcesContent":["/* eslint-disable react/no-access-state-in-setstate */\nimport React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGood: string[];\n}\n\nclass App extends React.Component {\n  state: State = {\n    selectedGood: ['Jam'],\n  };\n\n  isSelected = (product: string) => {\n    return this.state.selectedGood.includes(product);\n  };\n\n  addProduct = (product: string) => {\n    this.setState((pre : State) => {\n      pre.selectedGood.push(product);\n\n      return {\n        selectedGood: pre.selectedGood,\n      };\n    });\n  };\n\n  deleteProduct = (product: string) => {\n    this.setState((pre : State) => {\n      return {\n        selectedGood: pre.selectedGood.filter(\n          (item: string) => item !== product,\n        ),\n      };\n    });\n  };\n\n  onClickFunc = (product : string) => {\n    if (this.isSelected(product)) {\n      this.deleteProduct(product);\n    } else {\n      this.addProduct(product);\n    }\n  };\n\n  renderSelectList = () => {\n    const newLocal = this.state.selectedGood.length\n      ? (\n        <>\n          <div className=\"select-products__title\">Selected good:</div>\n          <div className=\"select-products__list\">\n            {this.state.selectedGood.length === 1\n              ? `${this.state.selectedGood[0]} is selected`\n              : this.state.selectedGood.map((item, i, arr) => {\n                return arr[i] === arr[arr.length - 1]\n                  ? ` and ${item} are selected`\n                  : ` ${item}`;\n              })}\n          </div>\n        </>\n      )\n      : 'No goods selected';\n\n    return newLocal;\n  };\n\n  render() {\n    return (\n      <div className=\"products\">\n        <h1 className=\"select-products-list\">\n          { this.renderSelectList() }\n        </h1>\n        <button\n          className=\"button-clear\"\n          type=\"button\"\n          disabled={this.state.selectedGood.length === 0}\n          onClick={() => this.setState({ selectedGood: [] })}\n        >\n          {this.state.selectedGood.length ? 'Clear list' : 'X'}\n        </button>\n        <ul className=\"products__list\">\n          {\n            goodsFromServer.map(product => (\n              <li key={product} className=\"product-container\">\n                <button\n                  className=\"button-select\"\n                  type=\"button\"\n                  onClick={() => this.onClickFunc(product)}\n                >\n                  {this.isSelected(product) ? 'remove' : 'select'}\n                </button>\n\n                <span className={this.isSelected(product) ? 'product product-selected' : 'product'}>\n                  {product}\n                </span>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n\n// eslint-disable-next-line no-console\nconsole.log(goodsFromServer);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}